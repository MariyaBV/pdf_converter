{"version":3,"sources":["js/form.js","js/header.js","js/password.js","js/sidebar.js","js/stripe.js","js/uploader.js"],"names":["jQuery","document","ready","$","isValidEmail","email","test","on","e","preventDefault","val","trim","recaptcha","grecaptcha","getResponse","messages","en","fill","captcha","ru","msg","documentElement","lang","length","alert","password","addClass","removeClass","pass1","pass2","$errorText","text","show","hide","toggleClass","stripe","Stripe","elements","card","create","mount","form","getElementById","addEventListener","async","event","paymentMethod","error","createPaymentMethod","type","textContent","message","response","fetch","method","headers","body","JSON","stringify","payment_method_id","id","json","success","window","location","href","$uploader","$fileInput","$fileList","handleFiles","files","each","_","file","li","name","size","toFixed","append","click","this","stopPropagation","originalEvent","dataTransfer"],"mappings":"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","file":"../components/main.min.js","sourcesContent":["jQuery(document).ready(function ($) {\n    // Валидация email\n    function isValidEmail(email) {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    }\n    // Обработка отправки формы\n    $('#form-registration').on('submit', function (e) {\n        e.preventDefault();\n\n        const email = $('input[name=\"email\"]').val().trim();\n        const recaptcha = grecaptcha.getResponse();\n\n        const lang = document.documentElement.lang;\n        const messages = {\n            en: {\n                fill: \"Please enter a valid email.\",\n                captcha: \"Please confirm you are not a robot.\"\n            },\n            ru: {\n                fill: \"Пожалуйста, введите корректные email и телефон.\",\n                captcha: \"Пожалуйста, подтвердите, что вы не робот.\"\n            },\n        };\n        const msg = messages[lang] || messages['en'];\n\n        // Проверки\n        if (!email || !isValidEmail(email)) {\n            e.preventDefault();\n            alert(msg.fill);\n            return false;\n        }\n\n        if (recaptcha.length === 0) {\n            e.preventDefault();\n            alert(msg.captcha);\n            return false;\n        }\n\n        // Если всё ок то форма отправляется обычным POST на сервер\n    });\n\n    $('#form-login').on('submit', function (e) {\n        e.preventDefault();\n\n        const email = $('input[name=\"email\"]').val().trim();\n        const password = $('input[name=\"password\"]').val().trim();\n        const recaptcha = grecaptcha.getResponse();\n\n        const lang = document.documentElement.lang;\n        const messages = {\n            en: {\n                fill: \"Please enter a valid email and password.\",\n                captcha: \"Please confirm you are not a robot.\"\n            },\n            ru: {\n                fill: \"Пожалуйста, введите корректные email и телефон.\",\n                captcha: \"Пожалуйста, подтвердите, что вы не робот.\"\n            },\n        };\n        const msg = messages[lang] || messages['en'];\n\n        // Проверки\n        if (!email || !password || !isValidEmail(email)) {\n            e.preventDefault();\n            alert(msg.fill);\n            return false;\n        }\n\n        if (recaptcha.length === 0) {\n            e.preventDefault();\n            alert(msg.captcha);\n            return false;\n        }\n\n        // Если всё ок то форма отправляется обычным POST на сервер\n    });\n});","$(document).ready(function () {\n  // открытие\n  $(\".hamburger\").on(\"click\", function () {\n    $(\".header .nav-has-dropdown .nav-dropdown\").addClass(\"active\");\n  });\n\n  // закрытие\n  $(\".close\").on(\"click\", function () {\n    $(\".header .nav-has-dropdown .nav-dropdown\").removeClass(\"active\");\n  });\n});\n\n","$(document).ready(function () {\n  $('#password-form').on('submit', function (e) {\n    const pass1 = $('#new_password').val().trim();\n    const pass2 = $('#repeat_password').val().trim();\n    const $errorText = $('.error_text');\n\n    if (pass1.length < 8) {\n      e.preventDefault();\n      $errorText.text('Password must be at least 8 characters.');\n      $errorText.show();\n      return false;\n    }\n\n    if (pass1 !== pass2) {\n      e.preventDefault();\n      $errorText.text('Passwords do not match.');\n      $errorText.show();\n      return false;\n    }\n\n    $errorText.hide();\n    // если всё ок → форма отправляется обычным POST на сервер\n  });\n\n  // обработка кнопки \"Cancel\"\n  $('#password-cancel-btn').on('click', function () {\n    $('#new_password, #repeat_password').val('');\n    $('.error_text').hide();\n  });\n});\n","$(document).ready(function () {\n  $(\"#overlay\").on(\"click\", function () {\n    $(\".sidebar\").removeClass(\"active\");\n    $(\"#overlay\").removeClass(\"active\");\n    $(\"#button_back_sidebar\").removeClass(\"active\");\n  });\n\n  $(\"#button_back_sidebar\").on(\"click\", function () {\n    $(\".sidebar\").toggleClass(\"active\");\n    $(\"#overlay\").toggleClass(\"active\");\n    $(\"#button_back_sidebar\").toggleClass(\"active\");\n  });\n});","const stripe = Stripe(\"pk_test_XXXX\"); // твой публичный ключ нужно поставить!!!!!\n  const elements = stripe.elements();\n\n  const card = elements.create(\"card\");\n  card.mount(\"#card-element\");\n\n  const form = document.getElementById(\"payment-form\");\n  form.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n\n    const {paymentMethod, error} = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: card,\n    });\n\n    if (error) {\n      document.getElementById(\"card-errors\").textContent = error.message;\n    } else {\n      // Отправляем paymentMethod.id на твой backend\n      const response = await fetch(\"/pay\", {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({payment_method_id: paymentMethod.id}),\n      });\n\n      const result = await response.json();\n      if (result.success) {\n        window.location.href = \"/success\";\n      } else {\n        document.getElementById(\"card-errors\").textContent = \"Payment error.\";\n      }\n    }\n  });","$(function () {\n    const $uploader = $(\"#uploader\");\n    const $fileInput = $(\"#fileInput\");\n    const $fileList = $(\"#fileList\");\n    const $pdfViewer = $(\"#pdf-viewer\");\n\n    // Кнопка выбора файлов\n    $(\"#selectBtn\").on(\"click\", function () {\n        $fileInput.click();\n    });\n\n    // Выбор файлов через input\n    $fileInput.on(\"change\", function () {\n        handleFiles(this.files);\n    });\n\n    // Нужно отменять dragover/drop на всем документе\n    $(document).on(\"dragover drop\", function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n    });\n\n    // Drag enter / leave / over\n    $uploader.on(\"dragover\", function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        $uploader.addClass(\"dragover\");\n    });\n\n    $uploader.on(\"dragleave\", function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        $uploader.removeClass(\"dragover\");\n    });\n\n    // Drop\n    $uploader.on(\"drop\", function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        $uploader.removeClass(\"dragover\");\n\n        const files = e.originalEvent.dataTransfer.files;\n        handleFiles(files);\n    });\n\n    // Обработка файлов\n    function handleFiles(files) {\n        $.each(files, function (_, file) {\n            if (file.type === \"application/pdf\") {\n                const li = $(\"<li></li>\").text(file.name + \" (\" + (file.size / 1024).toFixed(1) + \" KB)\");\n                $fileList.append(li);\n            } else {\n                alert(\"File \" + file.name + \" not is PDF!\");\n            }\n        });\n    };\n\n    // Рендер PDF с помощью PDF.js\n    function openPDF(file) {\n        $pdfViewer.html(\"\"); // очистка\n\n        const reader = new FileReader();\n        reader.onload = function () {\n            const typedarray = new Uint8Array(this.result);\n\n            pdfjsLib.getDocument(typedarray).promise.then(function (pdf) {\n                console.log(\"PDF открыт, страниц:\", pdf.numPages);\n\n                // Рисуем все страницы\n                for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\n                    pdf.getPage(pageNum).then(function (page) {\n                        const scale = 1.2;\n                        const viewport = page.getViewport({ scale });\n\n                        const canvas = document.createElement(\"canvas\");\n                        const context = canvas.getContext(\"2d\");\n                        canvas.height = viewport.height;\n                        canvas.width = viewport.width;\n\n                        $pdfViewer.append(canvas);\n\n                        page.render({\n                            canvasContext: context,\n                            viewport: viewport\n                        });\n                    });\n                }\n            });\n        };\n        reader.readAsArrayBuffer(file);\n    }\n});"]}