{"version":3,"sources":["js/header.js","js/uploader.js"],"names":["$","document","ready","on","addClass","removeClass","$uploader","$fileInput","$fileList","handleFiles","files","each","_","file","type","li","text","name","size","toFixed","append","alert","click","this","e","preventDefault","stopPropagation","originalEvent","dataTransfer"],"mappings":"AAAAA,EAAEC,UAAUC,OAAM,WAEhBF,EAAE,cAAcG,GAAG,SAAS,WAC1BH,EAAE,2CAA2CI,SAAS,SACxD,IAGAJ,EAAE,UAAUG,GAAG,SAAS,WACtBH,EAAE,2CAA2CK,YAAY,SAC3D,GACF;ACVAL,GAAE,WACE,MAAMM,EAAYN,EAAE,aACdO,EAAaP,EAAE,cACfQ,EAAYR,EAAE,aACDA,EAAE,eA0CrB,SAASS,EAAYC,GACjBV,EAAEW,KAAKD,GAAO,SAAUE,EAAGC,GACvB,GAAkB,oBAAdA,EAAKC,KAA4B,CACjC,MAAMC,EAAKf,EAAE,aAAagB,KAAKH,EAAKI,KAAO,MAAQJ,EAAKK,KAAO,MAAMC,QAAQ,GAAK,QAClFX,EAAUY,OAAOL,EACrB,MACIM,MAAM,QAAUR,EAAKI,KAAO,eAEpC,GACJ,CAhDAjB,EAAE,cAAcG,GAAG,SAAS,WACxBI,EAAWe,OACf,IAGAf,EAAWJ,GAAG,UAAU,WACpBM,EAAYc,KAAKb,MACrB,IAGAV,EAAEC,UAAUE,GAAG,iBAAiB,SAAUqB,GACtCA,EAAEC,iBACFD,EAAEE,iBACN,IAGApB,EAAUH,GAAG,YAAY,SAAUqB,GAC/BA,EAAEC,iBACFD,EAAEE,kBACFpB,EAAUF,SAAS,WACvB,IAEAE,EAAUH,GAAG,aAAa,SAAUqB,GAChCA,EAAEC,iBACFD,EAAEE,kBACFpB,EAAUD,YAAY,WAC1B,IAGAC,EAAUH,GAAG,QAAQ,SAAUqB,GAC3BA,EAAEC,iBACFD,EAAEE,kBACFpB,EAAUD,YAAY,YAGtBI,EADce,EAAEG,cAAcC,aAAalB,MAE/C,GAgDJ","file":"../components/main.min.js","sourcesContent":["$(document).ready(function () {\n  // открытие\n  $(\".hamburger\").on(\"click\", function () {\n    $(\".header .nav-has-dropdown .nav-dropdown\").addClass(\"active\");\n  });\n\n  // закрытие\n  $(\".close\").on(\"click\", function () {\n    $(\".header .nav-has-dropdown .nav-dropdown\").removeClass(\"active\");\n  });\n});\n\n","$(function () {\n    const $uploader = $(\"#uploader\");\n    const $fileInput = $(\"#fileInput\");\n    const $fileList = $(\"#fileList\");\n    const $pdfViewer = $(\"#pdf-viewer\");\n\n    // Кнопка выбора файлов\n    $(\"#selectBtn\").on(\"click\", function () {\n        $fileInput.click();\n    });\n\n    // Выбор файлов через input\n    $fileInput.on(\"change\", function () {\n        handleFiles(this.files);\n    });\n\n    // Нужно отменять dragover/drop на всем документе\n    $(document).on(\"dragover drop\", function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n    });\n\n    // Drag enter / leave / over\n    $uploader.on(\"dragover\", function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        $uploader.addClass(\"dragover\");\n    });\n\n    $uploader.on(\"dragleave\", function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        $uploader.removeClass(\"dragover\");\n    });\n\n    // Drop\n    $uploader.on(\"drop\", function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        $uploader.removeClass(\"dragover\");\n\n        const files = e.originalEvent.dataTransfer.files;\n        handleFiles(files);\n    });\n\n    // Обработка файлов\n    function handleFiles(files) {\n        $.each(files, function (_, file) {\n            if (file.type === \"application/pdf\") {\n                const li = $(\"<li></li>\").text(file.name + \" (\" + (file.size / 1024).toFixed(1) + \" KB)\");\n                $fileList.append(li);\n            } else {\n                alert(\"File \" + file.name + \" not is PDF!\");\n            }\n        });\n    };\n\n    // Рендер PDF с помощью PDF.js\n    function openPDF(file) {\n        $pdfViewer.html(\"\"); // очистка\n\n        const reader = new FileReader();\n        reader.onload = function () {\n            const typedarray = new Uint8Array(this.result);\n\n            pdfjsLib.getDocument(typedarray).promise.then(function (pdf) {\n                console.log(\"PDF открыт, страниц:\", pdf.numPages);\n\n                // Рисуем все страницы\n                for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\n                    pdf.getPage(pageNum).then(function (page) {\n                        const scale = 1.2;\n                        const viewport = page.getViewport({ scale });\n\n                        const canvas = document.createElement(\"canvas\");\n                        const context = canvas.getContext(\"2d\");\n                        canvas.height = viewport.height;\n                        canvas.width = viewport.width;\n\n                        $pdfViewer.append(canvas);\n\n                        page.render({\n                            canvasContext: context,\n                            viewport: viewport\n                        });\n                    });\n                }\n            });\n        };\n        reader.readAsArrayBuffer(file);\n    }\n});"]}